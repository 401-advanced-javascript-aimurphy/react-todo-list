{"ast":null,"code":"import _defineProperty from \"/Users/pandamurphyii/Documents/codefellows/401/react-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pandamurphyii/Documents/codefellows/401/react-todo/src/components/form/form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nclass Form extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toggleitem = (e, actualID) => {\n      e.preventDefault();\n      let newTodos = state.map(item => item.id !== actualID ? item : _objectSpread({}, item, {\n        complete: !item.complete\n      }));\n      state.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChange = e => this.setState({\n      [e.target.name]: e.target.value\n    });\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.props.addTask(this.state.title);\n      this.setState({\n        title: \"\"\n      });\n\n      getTodos = () => {\n        return state.map((item, i) => {\n          return React.createElement(\"li\", {\n            key: i,\n            onClick: toggleitem,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, item.task);\n        });\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \" hi \"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Create new task\" // defaultValue={this.state.title}\n        ,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, state.map((item, i) => {\n        // when you iterate you need an id, key is that @720ish\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: toggleitem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, item.task, \" - \", item.complete.toString());\n      })));\n    };\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/pandamurphyii/Documents/codefellows/401/react-todo/src/components/form/form.js"],"names":["React","Form","Component","toggleitem","e","actualID","preventDefault","newTodos","state","map","item","id","complete","setState","target","name","value","onChange","onSubmit","props","addTask","title","getTodos","i","task","toString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAGjCC,UAHiC,GAGtB,CAACC,CAAD,EAAIC,QAAJ,KAAe;AACxBD,MAAAA,CAAC,CAACE,cAAF;AAEA,UAAIC,QAAQ,GAACC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAEA,IAAI,CAACC,EAAL,KAAWN,QAAX,GAAsBK,IAAtB,qBAA+BA,IAA/B;AAAqCE,QAAAA,QAAQ,EAAC,CAACF,IAAI,CAACE;AAApD,QAAhB,CAAb;AACAJ,MAAAA,KAAK,CAACK,QAAN,CAAe;AAAE,SAACT,CAAC,CAACU,MAAF,CAASC,IAAV,GAAiBX,CAAC,CAACU,MAAF,CAASE;AAA5B,OAAf;AAED,KATgC;;AAAA,SAUjCC,QAViC,GAUtBb,CAAC,IAAI,KAAKS,QAAL,CAAc;AAAE,OAACT,CAAC,CAACU,MAAF,CAASC,IAAV,GAAiBX,CAAC,CAACU,MAAF,CAASE;AAA5B,KAAd,CAViB;;AAAA,SAYjCE,QAZiC,GAYtBd,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKa,KAAL,CAAWC,OAAX,CAAmB,KAAKZ,KAAL,CAAWa,KAA9B;AACA,WAAKR,QAAL,CAAc;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAd;;AAEFC,MAAAA,QAAQ,GAAC,MAAI;AACX,eAAOd,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAMa,CAAN,KAAU;AAAC,iBAAO;AAAI,YAAA,GAAG,EAAEA,CAAT;AAAY,YAAA,OAAO,EAAEpB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkCO,IAAI,CAACc,IAAvC,CAAP;AAAyD,SAA9E,CAAP;AACD,OAFD;;AAIA,aAAQ,0CACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADQ,EAER;AAAM,QAAA,QAAQ,EAAE,KAAKN,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,WAAW,EAAC,iBAHhB,CAII;AAJJ;AAKI,QAAA,QAAQ,EAAE,KAAKD,QALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAQM;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARN,CAFQ,EAgBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIT,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAMa,CAAN,KAAU;AAClB;AACA,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAY,UAAA,OAAO,EAAEpB,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCO,IAAI,CAACc,IAAvC,SAAgDd,IAAI,CAACE,QAAL,CAAca,QAAd,EAAhD,CAAP;AACD,OAHD,CAFJ,CAhBQ,CAAR;AA0BD,KA/CkC;AAAA;;AAAA;;AAoDnC,eAAexB,IAAf","sourcesContent":["import React from 'react';\n\nclass Form extends React.Component {\n  \n\n  toggleitem=(e, actualID)=>{\n    e.preventDefault();\n\n    let newTodos=state.map(item=>item.id!== actualID ? item:{...item, complete:!item.complete});\n    state.setState({ [e.target.name]: e.target.value });\n\n  }\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTask(this.state.title);\n    this.setState({ title: \"\" });\n\n  getTodos=()=>{\n    return state.map((item,i)=>{return <li key={i} onClick={toggleitem}>{item.task}</li>})\n  }\n\n  return (<>\n  <h1> hi </h1>\n  <form onSubmit={this.onSubmit}>\n      <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Create new task\"\n          // defaultValue={this.state.title}\n          onChange={this.onChange}\n        />\n        <input\n          type=\"submit\"\n          value=\"Submit\"\n        />\n      </form>\n\n  <ul>\n    {\n      state.map((item,i)=>{\n        // when you iterate you need an id, key is that @720ish\n        return <li key={i} onClick={toggleitem}>{item.task} - {item.complete.toString()}</li>\n      })\n    }\n  </ul>\n  </>\n  )\n}\n  }\n\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}