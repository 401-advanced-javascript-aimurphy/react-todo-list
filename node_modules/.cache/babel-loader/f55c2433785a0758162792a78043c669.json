{"ast":null,"code":"import _defineProperty from \"/Users/pandamurphyii/Documents/codefellows/401/react-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/pandamurphyii/Documents/codefellows/401/react-todo/src/components/form/form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\n\nfunction Form(props) {\n  let state = [{\n    id: 1,\n    task: 'house',\n    complete: false\n  }, {\n    id: 2,\n    task: 'yard',\n    complete: false\n  }]; // propskids?\n\n  const toggleitem = (e, actualID) => {\n    e.preventDefault();\n    let newTodos = state.map(item => item.id !== actualID ? item : _objectSpread({}, item, {\n      complete: !item.complete\n    }));\n    state.setState({\n      [e.target.name]: e.target.value\n    }); // }@739\n\n    const getTodos = () => {\n      return state.map((item, i) => {\n        return React.createElement(\"li\", {\n          key: i,\n          onClick: toggleitem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, item.task);\n      });\n    };\n\n    return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \" hi \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, state.map((item, i) => {\n      // when you iterate you need an id, key is that @720ish\n      return React.createElement(\"li\", {\n        key: i,\n        onClick: toggleitem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, item.task, \" - \", item.complete.toString());\n    })));\n  }; // class Form extends React.Component {\n  //   state = {\n  //     title: '',\n  //   };\n  // @1045\n\n  /*\n    onChange = e => \n     let fieldName = e.target.name\n    let val = e.target.value\n    let newState = {\n      [fieldName]: value\n      //brackets because we want variable not the actual value\n      this.setState(newState);\n    }\n  }\n  */\n  // onChange = e => this.setState({ [e.target.name]: e.target.value });\n  // onSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.addTask(this.state.title);\n  //   this.setState({ title: \"\" });\n  // };\n  // render() {\n  //   return (\n  //     <form onSubmit={this.onSubmit}>\n  //       <input\n  //         type=\"text\"\n  //         name=\"title\"\n  //         placeholder=\"Create new task\"\n  //         // defaultValue={this.state.title}\n  //         onChange={this.onChange}\n  //       />\n  //       <input\n  //         type=\"submit\"\n  //         value=\"Submit\"\n  //       />\n  //     </form>\n  //   );\n  // }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/pandamurphyii/Documents/codefellows/401/react-todo/src/components/form/form.js"],"names":["React","Form","props","state","id","task","complete","toggleitem","e","actualID","preventDefault","newTodos","map","item","setState","target","name","value","getTodos","i","toString"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAElB,MAAIC,KAAK,GAAC,CACN;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAC,OAAZ;AAAqBC,IAAAA,QAAQ,EAAE;AAA/B,GADM,EAEN;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,IAAI,EAAC,MAAZ;AAAoBC,IAAAA,QAAQ,EAAE;AAA9B,GAFM,CAAV,CAFkB,CAOlB;;AACA,QAAMC,UAAU,GAAC,CAACC,CAAD,EAAIC,QAAJ,KAAe;AAC9BD,IAAAA,CAAC,CAACE,cAAF;AAEA,QAAIC,QAAQ,GAACR,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAEA,IAAI,CAACT,EAAL,KAAWK,QAAX,GAAsBI,IAAtB,qBAA+BA,IAA/B;AAAqCP,MAAAA,QAAQ,EAAC,CAACO,IAAI,CAACP;AAApD,MAAhB,CAAb;AACAH,IAAAA,KAAK,CAACW,QAAN,CAAe;AAAE,OAACN,CAAC,CAACO,MAAF,CAASC,IAAV,GAAiBR,CAAC,CAACO,MAAF,CAASE;AAA5B,KAAf,EAJ8B,CAKhC;;AAIA,UAAMC,QAAQ,GAAC,MAAI;AACjB,aAAOf,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAMM,CAAN,KAAU;AAAC,eAAO;AAAI,UAAA,GAAG,EAAEA,CAAT;AAAY,UAAA,OAAO,EAAEZ,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCM,IAAI,CAACR,IAAvC,CAAP;AAAyD,OAA9E,CAAP;AACD,KAFD;;AAGA,WAAQ,0CACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADQ,EAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIF,KAAK,CAACS,GAAN,CAAU,CAACC,IAAD,EAAMM,CAAN,KAAU;AAClB;AACA,aAAO;AAAI,QAAA,GAAG,EAAEA,CAAT;AAAY,QAAA,OAAO,EAAEZ,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCM,IAAI,CAACR,IAAvC,SAAgDQ,IAAI,CAACP,QAAL,CAAcc,QAAd,EAAhD,CAAP;AACD,KAHD,CAFJ,CAHQ,CAAR;AAaD,GAzBC,CARkB,CAoCpB;AACA;AACA;AACA;AAEE;;AACA;;;;;;;;;;;AAaA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;;AACD,eAAenB,IAAf","sourcesContent":["import React from 'react';\n\nfunction Form(props){\n\n  let state=[\n      {id:1, task:'house', complete: false},\n      {id:2, task:'yard', complete: false}, \n  ];\n\n  // propskids?\n  const toggleitem=(e, actualID)=>{\n    e.preventDefault();\n\n    let newTodos=state.map(item=>item.id!== actualID ? item:{...item, complete:!item.complete});\n    state.setState({ [e.target.name]: e.target.value });\n  // }@739\n\n\n\n  const getTodos=()=>{\n    return state.map((item,i)=>{return <li key={i} onClick={toggleitem}>{item.task}</li>})\n  }\n  return (<>\n  <h1> hi </h1>\n\n  <ul>\n    {\n      state.map((item,i)=>{\n        // when you iterate you need an id, key is that @720ish\n        return <li key={i} onClick={toggleitem}>{item.task} - {item.complete.toString()}</li>\n      })\n    }\n  </ul>\n  </>\n  )\n}\n\n\n// class Form extends React.Component {\n//   state = {\n//     title: '',\n//   };\n\n  // @1045\n  /*\n    onChange = e => \n\n    let fieldName = e.target.name\n    let val = e.target.value\n    let newState = {\n      [fieldName]: value\n      //brackets because we want variable not the actual value\n      this.setState(newState);\n    }\n  }\n  */\n\n  // onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  // onSubmit = e => {\n  //   e.preventDefault();\n  //   this.props.addTask(this.state.title);\n  //   this.setState({ title: \"\" });\n  // };\n  // render() {\n  //   return (\n  //     <form onSubmit={this.onSubmit}>\n  //       <input\n  //         type=\"text\"\n  //         name=\"title\"\n  //         placeholder=\"Create new task\"\n  //         // defaultValue={this.state.title}\n  //         onChange={this.onChange}\n  //       />\n  //       <input\n  //         type=\"submit\"\n  //         value=\"Submit\"\n  //       />\n  //     </form>\n  //   );\n  // }\n}\nexport default Form;"]},"metadata":{},"sourceType":"module"}